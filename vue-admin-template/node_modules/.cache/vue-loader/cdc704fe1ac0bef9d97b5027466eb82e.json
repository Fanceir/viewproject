{"remainingRequest":"D:\\view_project\\viewproject\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\view_project\\viewproject\\vue-admin-template\\src\\views\\dashboard\\index.vue?vue&type=style&index=0&id=106c86ed&scoped=true&lang=css","dependencies":[{"path":"D:\\view_project\\viewproject\\vue-admin-template\\src\\views\\dashboard\\index.vue","mtime":1711098750841},{"path":"D:\\view_project\\viewproject\\vue-admin-template\\node_modules\\css-loader\\dist\\cjs.js","mtime":1711098452459},{"path":"D:\\view_project\\viewproject\\vue-admin-template\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1711098455922},{"path":"D:\\view_project\\viewproject\\vue-admin-template\\node_modules\\postcss-loader\\src\\index.js","mtime":1711098454664},{"path":"D:\\view_project\\viewproject\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1711098452039},{"path":"D:\\view_project\\viewproject\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js","mtime":1711098455922}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmRhc2hib2FyZCB7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LXdyYXA6IHdyYXA7Cn0KCi5jaGFydCB7CiAgd2lkdGg6IDUwJTsKICBoZWlnaHQ6IDQwMHB4Owp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuFA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/dashboard","sourcesContent":["<template>\n  <div class=\"dashboard-container\">\n    <h1>Dashboard</h1>\n    <div class=\"chart\" ref=\"chart1\"></div>\n    <div class=\"chart\" ref=\"chart2\"></div>\n  </div>\n\n</template>\n\n<script>\n// 引入 Echarts 库\nimport * as echarts from \"echarts\";\n\nexport default {\n  name: 'Dashboard',\n  data() {\n    return {\n      // 存储图表实例\n      charts: [],\n      // 自定义数据\n      customData: {\n        chart1: [30, 40, 50, 60, 70],\n        chart2: [70, 60, 90, 40, 45],\n        // 其他图表数据...\n      }\n    };\n  },\n  mounted() {\n    // 在组件挂载完成后渲染图表\n    this.renderCharts();\n  },\n  methods: {\n    renderCharts() {\n      // 获取图表容器元素\n      const chart1 = this.$refs.chart1;\n      const chart2 = this.$refs.chart2;\n      // 其他图表容器...\n\n      // 使用 Echarts 初始化图表实例\n      const myChart1 = echarts.init(chart1);\n      const myChart2 = echarts.init(chart2);\n      // 其他图表实例...\n\n      // 配置图表数据\n      myChart1.setOption({\n        title: {\n          text: '注册人数'\n        },\n        xAxis: {\n          type: 'category',\n          data: ['大一', '大二', '大三', '大四', '教师']\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          data: this.customData.chart1,\n          type: 'bar'\n        }]\n      });\n\n      myChart2.setOption({\n        title: {\n          text: '任务完成数量'\n        },\n        xAxis: {\n          type: 'category',\n          data: ['任务1', '任务2', '任务3', '任务4', '任务5']\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          data: this.customData.chart2,\n          type: 'line'\n        }]\n      });\n\n      // 存储图表实例\n      this.charts.push(myChart1, myChart2);\n      // 其他图表实例...\n    }\n  }\n};\n</script>\n\n<style scoped>\n.dashboard {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.chart {\n  width: 50%;\n  height: 400px;\n}\n</style>\n"]}]}