{"remainingRequest":"D:\\view_project\\viewproject\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\view_project\\viewproject\\vue-admin-template\\src\\views\\dashboard\\index.vue?vue&type=style&index=0&id=106c86ed&scoped=true&lang=css","dependencies":[{"path":"D:\\view_project\\viewproject\\vue-admin-template\\src\\views\\dashboard\\index.vue","mtime":1711413848194},{"path":"D:\\view_project\\viewproject\\vue-admin-template\\node_modules\\css-loader\\dist\\cjs.js","mtime":1711098452459},{"path":"D:\\view_project\\viewproject\\vue-admin-template\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1711098455922},{"path":"D:\\view_project\\viewproject\\vue-admin-template\\node_modules\\postcss-loader\\src\\index.js","mtime":1711098454664},{"path":"D:\\view_project\\viewproject\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1711098452039},{"path":"D:\\view_project\\viewproject\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js","mtime":1711098455922}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmRhc2hib2FyZCB7DQoJZGlzcGxheTogZmxleDsNCglmbGV4LXdyYXA6IHdyYXA7DQp9DQoNCi5jaGFydCB7DQoJZmxvYXQ6IGxlZnQ7DQoJd2lkdGg6IDEwMCU7DQoJaGVpZ2h0OiA0MDBweDsNCn0NCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2SA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/dashboard","sourcesContent":["<template>\r\n\t<div class=\"dashboard-container\">\r\n\t\t<h1>Dashboard</h1>\r\n\t\t<div ref=\"chart1\" class=\"chart\" />\r\n\t\t<div ref=\"chart2\" class=\"chart\" />\r\n\t\t<div ref=\"chart3\" class=\"chart\" />\r\n\t\t<div ref=\"chart4\" class=\"chart\" />\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts'\r\nexport default {\r\n\t/*eslint-disable*/\r\n\t// eslint-disable-next-line\r\n\tname: \"Dashboard\",\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\t// 存储图表实例\r\n\t\t\tcharts: [],\r\n\t\t\t// 自定义数据\r\n\t\t\tcustomData: {\r\n\t\t\t\tchart1: [30, 40, 50, 60, 70],\r\n\t\t\t\tchart2: [70, 60, 90, 40, 45],\r\n\t\t\t\tchart3: [\r\n\t\t\t\t\t{ value: 23, name: \"大一\" },\r\n\t\t\t\t\t{ value: 24, name: \"大二\" },\r\n\t\t\t\t\t{ value: 18, name: \"大三\" },\r\n\t\t\t\t\t{ value: 25, name: \"大四\" }\r\n\t\t\t\t],\r\n\t\t\t\tchart4: [23, 24, 18, 25, 27, 28, 25]\r\n\t\t\t\t// 其他图表数据...\r\n\t\t\t}\r\n\t\t};\r\n\t},\r\n\tmounted() {\r\n\t\t//颜色选项\r\n\t\tlet colors = ['#5470c6', '#91cc75', '#fac858', '#ee6666', '#73c0de', '#3ba272']\r\n\t\t// 在组件挂载完成后渲染图表\r\n\t\tthis.renderCharts();\r\n\t\t// 监听窗口大小变化，重新渲染图表\r\n\t\twindow.addEventListener(\"resize\", this.handleResize);\r\n\t\t// 设置定时器，每隔两秒更新数据\r\n\t\tsetInterval(() => {\r\n\t\t\tthis.updateChartData();\r\n\t\t}, 2000);\r\n\t},\r\n\tbeforeDestroy() {\r\n\t\t// 在组件销毁前移除窗口大小变化监听器\r\n\t\twindow.removeEventListener(\"resize\", this.handleResize);\r\n\t},\r\n\tmethods: {\r\n\t\trenderCharts() {\r\n\t\t\t// 获取图表容器元素\r\n\t\t\tconst chart1 = this.$refs.chart1;\r\n\t\t\tconst chart2 = this.$refs.chart2;\r\n\t\t\tconst chart3 = this.$refs.chart3;\r\n\t\t\tconst chart4 = this.$refs.chart4;\r\n\t\t\t// 使用 Echarts 初始化图表实例\r\n\t\t\tconst myChart1 = echarts.init(chart1);\r\n\t\t\tconst myChart2 = echarts.init(chart2);\r\n\t\t\tconst myChart3 = echarts.init(chart3);\r\n\t\t\tconst myChart4 = echarts.init(chart4);\r\n\t\t\t// 配置图表数据...\r\n\t\t\tmyChart1.setOption({\r\n\t\t\t\t// 表名\r\n\t\t\t\ttitle: { text: \"注册人数\" },\r\n\t\t\t\t// 横轴\r\n\t\t\t\txAxis: {\r\n\t\t\t\t\ttype: \"category\",\r\n\t\t\t\t\tdata: [\"大一\", \"大二\", \"大三\", \"大四\", \"教师\"],\r\n\t\t\t\t},\r\n\t\t\t\t// 纵轴\r\n\t\t\t\tyAxis: {\r\n\t\t\t\t\ttype: \"value\",\r\n\t\t\t\t},\r\n\t\t\t\t// 数据来源、图表类型\r\n\t\t\t\tseries: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdata: this.customData.chart1,\r\n\t\t\t\t\t\ttype: \"bar\",\r\n\t\t\t\t\t},]\r\n\t\t\t});\r\n\t\t\t// 其他图表配置\r\n\t\t\t//折线图\r\n\t\t\tmyChart2.setOption({\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: '任务完成数量',\r\n\t\t\t\t},\r\n\t\t\t\txAxis: {\r\n\t\t\t\t\ttype: 'category',\r\n\t\t\t\t\tdata: ['任务1', '任务2', '任务3', '任务4', '任务5'],\r\n\t\t\t\t},\r\n\t\t\t\tyAxis: {\r\n\t\t\t\t\ttype: 'value',\r\n\t\t\t\t},\r\n\t\t\t\tseries: [{\r\n\t\t\t\t\tdata: this.customData.chart2,\r\n\t\t\t\t\ttype: 'line',\r\n\t\t\t\t\t//颜色设置\r\n\t\t\t\t\tcolor: ['#00aa00', '#F44042']\r\n\t\t\t\t\t//itemStyle : {normal : {color:'#409EFF'}, //改变折线点的颜色\r\n\t\t\t\t\t//lineStyle:{color:'#00aa00'}}//改变折线颜色\r\n\t\t\t\t}],\r\n\t\t\t});\r\n\t\t\t//饼图\r\n\t\t\tmyChart3.setOption({\r\n\t\t\t\t//图例位置属性设置\r\n\t\t\t\tlegend: {\r\n\t\t\t\t\tright: \"10%\",\r\n\t\t\t\t\ttop: \"30%\",\r\n\t\t\t\t\torient: \"vertical\"\r\n\t\t\t\t},\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: '各年级占比',\r\n\t\t\t\t\ttop: \"0%\",\r\n\t\t\t\t\t//设置标题居中\r\n\t\t\t\t\tleft: \"center\"\r\n\t\t\t\t},\r\n\t\t\t\tseries: [{\r\n\t\t\t\t\t//自己设定的数据\r\n\t\t\t\t\tdata: this.customData.chart3,\r\n\t\t\t\t\t//随机生成数据\r\n\t\t\t\t\t//data:makeRandomData(),\r\n\t\t\t\t\ttype: 'pie',\r\n\t\t\t\t\t//图例\r\n\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\t//设置图例的表示形式\r\n\t\t\t\t\t\tformatter: \"{b}:{c}({d}%)\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t//饼图的大小\r\n\t\t\t\t\tradius: \"80%\",\r\n\t\t\t\t}]\r\n\t\t\t});\r\n\t\t\t//散点图\r\n\t\t\tmyChart4.setOption({\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: '各天在线人数(周次)'\r\n\t\t\t\t},\r\n\t\t\t\txAxis: {\r\n\t\t\t\t\ttype: 'category',\r\n\t\t\t\t\tdata: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\r\n\t\t\t\t},\r\n\t\t\t\tyAxis: {\r\n\t\t\t\t\ttype: 'value'\r\n\t\t\t\t},\r\n\t\t\t\tseries: [{\r\n\t\t\t\t\tdata: this.customData.chart4,\r\n\t\t\t\t\ttype: 'scatter',\r\n\t\t\t\t\tcolor: '#409EFF'\r\n\t\t\t\t}]\r\n\t\t\t});\r\n\t\t\t//添加数据缩放和工具栏功能\r\n\t\t\tmyChart1.setOption({\r\n\t\t\t\tdataZoom: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype: 'slider', // 缩放类型为滑动条\r\n\t\t\t\t\t\tstart: 0, // 起始位置百分比\r\n\t\t\t\t\t\tend: 100 // 结束位置百分比\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype: 'inside' // 内部缩放\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\ttoolbox: {\r\n\t\t\t\t\tfeature: {\r\n\t\t\t\t\t\tdataView: { readOnly: false }, // 数据视图，用户可以查看数据\r\n\t\t\t\t\t\tsaveAsImage: {} // 导出图片\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\ttooltip: {\r\n\t\t\t\t\ttrigger: 'axis' // 鼠标悬停提示\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tmyChart2.setOption({\r\n\t\t\t\tdataZoom: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype: 'slider', // 缩放类型为滑动条\r\n\t\t\t\t\t\tstart: 0, // 起始位置百分比\r\n\t\t\t\t\t\tend: 100 // 结束位置百分比\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype: 'inside' // 内部缩放\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\ttoolbox: {\r\n\t\t\t\t\tfeature: {\r\n\t\t\t\t\t\tdataView: { readOnly: false }, // 数据视图，用户可以查看数据\r\n\t\t\t\t\t\tsaveAsImage: {} // 导出图片\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\ttooltip: {\r\n\t\t\t\t\ttrigger: 'axis' // 鼠标悬停提示\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tmyChart4.setOption({\r\n\t\t\t\tdataZoom: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype: 'slider', // 缩放类型为滑动条\r\n\t\t\t\t\t\tstart: 0, // 起始位置百分比\r\n\t\t\t\t\t\tend: 100 // 结束位置百分比\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype: 'inside' // 内部缩放\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\ttoolbox: {\r\n\t\t\t\t\tfeature: {\r\n\t\t\t\t\t\tdataView: { readOnly: false }, // 数据视图，用户可以查看数据\r\n\t\t\t\t\t\tsaveAsImage: {} // 导出图片\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\ttooltip: {\r\n\t\t\t\t\ttrigger: 'axis' // 鼠标悬停提示\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t// 存储图表实例\r\n\t\t\tthis.charts.push(myChart1, myChart2);\r\n\t\t\tthis.charts.push(myChart3, myChart4);\r\n\t\t\t// 其他图表实例...\r\n\t\t},\r\n\t\tupdateChartData() {\r\n\t\t\t// 随机生成不同类型的新数据并更新图表\r\n\t\t\tthis.charts.forEach((chart, index) => {\r\n\t\t\t\tlet newData;\r\n\t\t\t\tswitch (index) {\r\n\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\tnewData = this.makeRandomData('myChart1');\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tnewData = this.makeRandomData('myChart2');\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tnewData = this.makeRandomData('myChart3');\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\tnewData = this.makeRandomData('myChart4');\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tnewData = this.makeRandomData('default');\r\n\t\t\t\t}\r\n\t\t\t\tchart.setOption({\r\n\t\t\t\t\tseries: [{ data: newData }]\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t},\r\n\t\tmakeRandomData(chartType) {\r\n\t\t\tswitch (chartType) {\r\n\t\t\t\tcase 'myChart1':\r\n\t\t\t\t\treturn [\r\n\t\t\t\t\t\t{ value: Math.floor(Math.random() * 10000) },\r\n\t\t\t\t\t\t{ value: Math.floor(Math.random() * 10000) },\r\n\t\t\t\t\t\t{ value: Math.floor(Math.random() * 10000) },\r\n\t\t\t\t\t\t{ value: Math.floor(Math.random() * 10000) },\r\n\t\t\t\t\t\t{ value: Math.floor(Math.random() * 10000) }\r\n\t\t\t\t\t];\r\n\t\t\t\tcase 'myChart2':\r\n\t\t\t\t\treturn [\r\n\t\t\t\t\t\t{ value: Math.floor(Math.random() * 10000) },\r\n\t\t\t\t\t\t{ value: Math.floor(Math.random() * 10000) },\r\n\t\t\t\t\t\t{ value: Math.floor(Math.random() * 10000) },\r\n\t\t\t\t\t\t{ value: Math.floor(Math.random() * 10000) },\r\n\t\t\t\t\t\t{ value: Math.floor(Math.random() * 10000) }\r\n\t\t\t\t\t];\r\n\t\t\t\tcase 'myChart3':\r\n\t\t\t\t\treturn [\r\n\t\t\t\t\t\t{ value: Math.floor(Math.random() * 10000), name: \"大一\" },\r\n\t\t\t\t\t\t{ value: Math.floor(Math.random() * 10000), name: \"大二\" },\r\n\t\t\t\t\t\t{ value: Math.floor(Math.random() * 10000), name: \"大三\" },\r\n\t\t\t\t\t\t{ value: Math.floor(Math.random() * 10000), name: \"大四\" }\r\n\t\t\t\t\t];\r\n\t\t\t\tcase 'myChart4':\r\n\t\t\t\t\treturn [\r\n\t\t\t\t\t\t{ value: Math.floor(Math.random() * 10000) },\r\n\t\t\t\t\t\t{ value: Math.floor(Math.random() * 10000) },\r\n\t\t\t\t\t\t{ value: Math.floor(Math.random() * 10000) },\r\n\t\t\t\t\t\t{ value: Math.floor(Math.random() * 10000) },\r\n\t\t\t\t\t\t{ value: Math.floor(Math.random() * 10000) },\r\n\t\t\t\t\t\t{ value: Math.floor(Math.random() * 10000) },\r\n\t\t\t\t\t\t{ value: Math.floor(Math.random() * 10000) }\r\n\t\t\t\t\t];\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn [];\r\n\t\t\t}\r\n\t\t},\r\n\t\thandleResize() {\r\n\t\t\t// 窗口大小变化时重新渲染图表\r\n\t\t\tthis.charts.forEach(chart => {\r\n\t\t\t\tchart.resize();\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.dashboard {\r\n\tdisplay: flex;\r\n\tflex-wrap: wrap;\r\n}\r\n\r\n.chart {\r\n\tfloat: left;\r\n\twidth: 100%;\r\n\theight: 400px;\r\n}\r\n</style>\r\n"]}]}